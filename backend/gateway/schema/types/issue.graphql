type Issue {
  id: ID!
  project: Project!
  milestone: Milestone
  author: User!
  number: Int!
  title: String!
  body: String
  state: IssueState!
  issueType: String!
}

type IssueConnection {
  edges: [IssueEdge]
  nodes: [Issue]
  pageInfo: PageInfo!
  totalCount: Int!
}

type IssueEdge {
  cursor: ID!
  node: Issue
}

enum IssueState {
  # An issue that is still open
  OPEN
  # An issue that has been closed
  CLOSED
}

input CreateIssueInput {
  # The project ID of the repository.
  projectId: ID!
  # The milestone ID of the repository.
  milestoneId: String
  # The title for the issue.
  title: String!
  # The body for the issue description.
  body: String

  issueType: String!
}

input UpdateIssueInput {
  iid: Int!
  # The title for the issue.
  title: String
  # The body for the issue description.
  body: String

  state: IssueState
}

input GetIssuesInput {
  first: Int
  last: Int
  after: String
  before: String
}
